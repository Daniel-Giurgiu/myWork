{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/learn-python/delu/delreact/src/App.js\";\nimport React, { Component } from \"react\";\n// import Conditional from \"./Conditional\"\n// import TodoItem from \"./TodoItem\";\n// import todosData from \"./todosData\";\n// import Product from \"./Product\";\n// import productsData from \"./vschoolProducts\"\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state ={\n//             isLoggedIn: false\n//         }\n//         this.handleClick = this.handleClick.bind(this)\n//     }\n//     handleClick() {\n//         this.setState(prevState => {\n//             return {\n//                 isLoggedIn: !prevState.isLoggedIn\n//             }\n//         })\n//     }\n//     render() {\n//         let buttonText =this.state.isLoggedIn ? \"LOG OUT\" : \"LOG IN\"\n//         let displayText = this.state.isLoggedIn ? \"Logged in\" : \"Logged out\" \n//         return (\n//             <div>\n//                 <button onClick={this.handleClick}>{buttonText}</button>\n//                 <h1>{displayText}</h1>\n//             </div>\n//         )\n//     }   \n// }\n// class App extends Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             firstName: \"\",\n//             lastName: \"\",\n//             isFrendly: false,\n//             gender: \"\",\n//             favColor: \"blue\"\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n//     handleChange(event) {\n//         const {name, value, type, checked} = event.target\n//         type === \"checkbox\" ? this.setState({[name]: checked}) : this.setState({\n//             [name]: value})\n//     }\n//     render() {\n//         return (\n//             <form onSubmit={this.handleSubmit}>\n\n//                 <input \n//                 type=\"text\" \n//                 value={this.state.firstName} \n//                 name=\"firstName\" \n//                 placeholder=\"First Name\" \n//                 onChange={this.handleChange} \n//                 />\n\n//                 <br />\n\n//                 <input \n//                 type=\"text\" \n//                 value={this.state.lastName} \n//                 name=\"lastName\" \n//                 placeholder=\"Last Name\" \n//                 onChange={this.handleChange} \n//                 />\n\n//                 <textarea \n//                 value={\"Some default value\"}\n//                 onChange={this.handleChange}\n//                 />\n//                 <br />\n\n//                 <label>\n//                     <input \n//                     type=\"checkbox\"\n//                     name=\"isFrendly\"\n//                     checked={this.state.isFrendly}\n//                     onChange={this.handleChange}\n//                     /> Is isFrendly??\n//                 </label>\n//                 <br />\n//                 <label>\n//                     <input \n//                     type=\"radio\"\n//                     name=\"gender\"\n//                     value=\"male\"\n//                     checked={this.state.gender === \"male\"}\n//                     onChange={this.handleChange}\n//                     /> Male\n//                 </label>\n//                 <br/>\n//                 <label>\n//                     <input \n//                     type=\"radio\"\n//                     name=\"gender\"\n//                     value=\"female\"\n//                     checked={this.state.gender === \"female\"}\n//                     onChange={this.handleChange}\n//                     /> female\n//                 </label>\n//                 <br/>\n//                 <label>Favorite Color:</label>\n//                 <select \n//                     value={this.state.favColor}\n//                     onChange={this.handleChange}\n//                     name=\"favColor\"\n//                 >\n//                     <option value=\"blue\">Blue</option>\n//                     <option value=\"green\">Green</option>\n//                     <option value=\"red\">Red</option>\n//                     <option value=\"orange\">Orange</option>\n//                     <option value=\"yellow\">Yellow</option>\n//                 </select>\n\n//                 <h1>{this.state.firstName} {this.state.lastName}</h1>\n//                 <h2>You are a {this.state.gender}</h2>\n//                 <h2>Your favorite color is {this.state.favColor}</h2>\n//                 <button>Submit</button>\n\n//             </form>\n//         )\n//     }\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // firstName = \"\",\n      // lastName = \"\",\n      // age = 0,\n      // gender = \"\",\n      // location = \"Stei\",\n      // favEat = \"fish\"      \n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.firstName,\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.firstName,\n        name: \"lastName\",\n        placeholder: \"Last Name\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  }\n}\n// class App extends Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             loading: false,\n//             character: {}\n//         }\n//     }\n//     componentDidMount() {\n//         this.setState({loading: true})\n//         fetch(\"https://swapi.dev/api/films/1/\")\n//             .then(response => response.json())\n//             .then(data => {\n//                 this.setState({\n//                     loading: false,\n//                     character: data\n//                 })\n//             } )\n//     }\n\n//     render() {\n//         const text = this.state.loading ? \"loading...\" : this.state.character.title\n//         return(\n//             <div>\n//               <p>{text}</p>\n//             </div>\n//         )\n//     }\n// }\n// class TodoList extends Component {\n//     constructor() {\n//         super()\n//         this.state = {}\n//     }\n//     static getDriveredStateFromProps(props, state){\n\n//     }\n//     getSnapshotBeforeUpdate() {\n\n//     }\n//     // componentWillMount() {\n\n//     // }\n//     componentDidMount() {\n//         // GET the data I need to correctly display\n\n//     }\n//     // componentWillReceiveProps(nextProps) {\n//     //     if (nextProps.whatever !== this.props.whatever) {\n//     //         // do something important here\n\n//     //     }\n//     // }\n//     shouldComponentUpdate(nextProps, nextState){\n//         // return true if want it to update\n//         // return false if not\n\n//     }\n//     componentWillUnmount() {\n//         // remove event listener\n//         // teardown or cleanup your code before your component disappears\n\n//     }\n//     // componenWillUpdate() {\n\n//     // }\n\n//     render() {\n//         return (\n//             <div>Code goes here</div>\n//         )\n//     }\n// }\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             todos: todosData\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n\n//     handleChange(id){\n//         this.setState(prevState => {\n//             const updatedTodos = prevState.todos.map(todo => {\n//                 if (todo.id === id) {\n//                     todo.completed = !todo.completed\n//                 }\n//                 return todo\n//             })\n//             return {\n//                 todos: updatedTodos\n\n//             }\n\n//         })\n//     } \n//     render() {\n//         const TodoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\n//         handleChange={this.handleChange}/>)\n//         return(\n//             <div className=\"todo-list\">\n//                 {TodoItems}\n//             </div>\n//         )\n//     }\n// }\n\nexport default App;","map":{"version":3,"names":["React","Component","App","constructor","state","render","firstName","handleChange"],"sources":["/home/daniel/Desktop/learn-python/delu/delreact/src/App.js"],"sourcesContent":["import React, {Component} from \"react\";\n// import Conditional from \"./Conditional\"\n// import TodoItem from \"./TodoItem\";\n// import todosData from \"./todosData\";\n// import Product from \"./Product\";\n// import productsData from \"./vschoolProducts\"\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state ={\n//             isLoggedIn: false\n//         }\n//         this.handleClick = this.handleClick.bind(this)\n//     }\n//     handleClick() {\n//         this.setState(prevState => {\n//             return {\n//                 isLoggedIn: !prevState.isLoggedIn\n//             }\n//         })\n//     }\n//     render() {\n//         let buttonText =this.state.isLoggedIn ? \"LOG OUT\" : \"LOG IN\"\n//         let displayText = this.state.isLoggedIn ? \"Logged in\" : \"Logged out\" \n//         return (\n//             <div>\n//                 <button onClick={this.handleClick}>{buttonText}</button>\n//                 <h1>{displayText}</h1>\n//             </div>\n//         )\n//     }   \n// }\n// class App extends Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             firstName: \"\",\n//             lastName: \"\",\n//             isFrendly: false,\n//             gender: \"\",\n//             favColor: \"blue\"\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n//     handleChange(event) {\n//         const {name, value, type, checked} = event.target\n//         type === \"checkbox\" ? this.setState({[name]: checked}) : this.setState({\n//             [name]: value})\n//     }\n//     render() {\n//         return (\n//             <form onSubmit={this.handleSubmit}>\n\n//                 <input \n//                 type=\"text\" \n//                 value={this.state.firstName} \n//                 name=\"firstName\" \n//                 placeholder=\"First Name\" \n//                 onChange={this.handleChange} \n//                 />\n\n//                 <br />\n\n\n//                 <input \n//                 type=\"text\" \n//                 value={this.state.lastName} \n//                 name=\"lastName\" \n//                 placeholder=\"Last Name\" \n//                 onChange={this.handleChange} \n//                 />\n\n//                 <textarea \n//                 value={\"Some default value\"}\n//                 onChange={this.handleChange}\n//                 />\n//                 <br />\n\n\n//                 <label>\n//                     <input \n//                     type=\"checkbox\"\n//                     name=\"isFrendly\"\n//                     checked={this.state.isFrendly}\n//                     onChange={this.handleChange}\n//                     /> Is isFrendly??\n//                 </label>\n//                 <br />\n//                 <label>\n//                     <input \n//                     type=\"radio\"\n//                     name=\"gender\"\n//                     value=\"male\"\n//                     checked={this.state.gender === \"male\"}\n//                     onChange={this.handleChange}\n//                     /> Male\n//                 </label>\n//                 <br/>\n//                 <label>\n//                     <input \n//                     type=\"radio\"\n//                     name=\"gender\"\n//                     value=\"female\"\n//                     checked={this.state.gender === \"female\"}\n//                     onChange={this.handleChange}\n//                     /> female\n//                 </label>\n//                 <br/>\n//                 <label>Favorite Color:</label>\n//                 <select \n//                     value={this.state.favColor}\n//                     onChange={this.handleChange}\n//                     name=\"favColor\"\n//                 >\n//                     <option value=\"blue\">Blue</option>\n//                     <option value=\"green\">Green</option>\n//                     <option value=\"red\">Red</option>\n//                     <option value=\"orange\">Orange</option>\n//                     <option value=\"yellow\">Yellow</option>\n//                 </select>\n\n               \n//                 <h1>{this.state.firstName} {this.state.lastName}</h1>\n//                 <h2>You are a {this.state.gender}</h2>\n//                 <h2>Your favorite color is {this.state.favColor}</h2>\n//                 <button>Submit</button>\n              \n//             </form>\n//         )\n//     }\n// }\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            // firstName = \"\",\n            // lastName = \"\",\n            // age = 0,\n            // gender = \"\",\n            // location = \"Stei\",\n            // favEat = \"fish\"      \n        }\n    }\n    render() {\n        return (\n            <form>\n                <input \n                type=\"text\" \n                value={this.state.firstName} \n                name=\"firstName\" \n                placeholder=\"First Name\" \n                onChange={this.handleChange} \n                />\n\n                <input \n                type=\"text\" \n                value={this.state.firstName} \n                name=\"lastName\" \n                placeholder=\"Last Name\" \n                onChange={this.handleChange} \n                 />\n\n\n\n            </form>\n        )\n    }\n}\n// class App extends Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             loading: false,\n//             character: {}\n//         }\n//     }\n//     componentDidMount() {\n//         this.setState({loading: true})\n//         fetch(\"https://swapi.dev/api/films/1/\")\n//             .then(response => response.json())\n//             .then(data => {\n//                 this.setState({\n//                     loading: false,\n//                     character: data\n//                 })\n//             } )\n//     }\n   \n//     render() {\n//         const text = this.state.loading ? \"loading...\" : this.state.character.title\n//         return(\n//             <div>\n//               <p>{text}</p>\n//             </div>\n//         )\n//     }\n// }\n// class TodoList extends Component {\n//     constructor() {\n//         super()\n//         this.state = {}\n//     }\n//     static getDriveredStateFromProps(props, state){\n\n//     }\n//     getSnapshotBeforeUpdate() {\n\n//     }\n//     // componentWillMount() {\n\n//     // }\n//     componentDidMount() {\n//         // GET the data I need to correctly display\n\n//     }\n//     // componentWillReceiveProps(nextProps) {\n//     //     if (nextProps.whatever !== this.props.whatever) {\n//     //         // do something important here\n\n//     //     }\n//     // }\n//     shouldComponentUpdate(nextProps, nextState){\n//         // return true if want it to update\n//         // return false if not\n\n//     }\n//     componentWillUnmount() {\n//         // remove event listener\n//         // teardown or cleanup your code before your component disappears\n\n//     }\n//     // componenWillUpdate() {\n\n//     // }\n  \n//     render() {\n//         return (\n//             <div>Code goes here</div>\n//         )\n//     }\n// }\n\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             todos: todosData\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n    \n//     handleChange(id){\n//         this.setState(prevState => {\n//             const updatedTodos = prevState.todos.map(todo => {\n//                 if (todo.id === id) {\n//                     todo.completed = !todo.completed\n//                 }\n//                 return todo\n//             })\n//             return {\n//                 todos: updatedTodos\n\n//             }\n\n//         })\n//     } \n//     render() {\n//         const TodoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\n//         handleChange={this.handleChange}/>)\n//         return(\n//             <div className=\"todo-list\">\n//                 {TodoItems}\n//             </div>\n//         )\n//     }\n// }\n\n\nexport default App"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA,MAAMC,GAAG,SAASD,SAAS,CAAC;EACxBE,WAAW,GAAG;IACV,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACT;MACA;MACA;MACA;MACA;MACA;IAAA,CACH;EACL;EACAC,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QACA,IAAI,EAAC,MAAM;QACX,KAAK,EAAE,IAAI,CAACD,KAAK,CAACE,SAAU;QAC5B,IAAI,EAAC,WAAW;QAChB,WAAW,EAAC,YAAY;QACxB,QAAQ,EAAE,IAAI,CAACC;MAAa;QAAA;QAAA;QAAA;MAAA,QAC1B,eAEF;QACA,IAAI,EAAC,MAAM;QACX,KAAK,EAAE,IAAI,CAACH,KAAK,CAACE,SAAU;QAC5B,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,WAAW;QACvB,QAAQ,EAAE,IAAI,CAACC;MAAa;QAAA;QAAA;QAAA;MAAA,QACzB;IAAA;MAAA;MAAA;MAAA;IAAA,QAIA;EAEf;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeL,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}