{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/learn-python/delu/delreact/src/App.js\";\nimport React from \"react\";\n// import Conditional from \"./Conditional\"\n// import TodoItem from \"./TodoItem\";\n// import todosData from \"./todosData\";\n// import Product from \"./Product\";\n// import productsData from \"./vschoolProducts\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoggedIn: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.setState(prevState => {\n      return;\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"LOG IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// class App extends Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             unreadMessages: [\"a\", \"b\", \"c\", \"d\"]\n//         }\n//     }\n\n//     render() {\n//         return(\n//             <div>\n//               {\n//                 this.state.unreadMessages.length > 0 &&\n//                 <h2>You have {this.state.unreadMessages.length} unread messages!</h2>\n//                }\n//             </div>\n//         )\n//     }\n// }\n// class TodoList extends Component {\n//     constructor() {\n//         super()\n//         this.state = {}\n//     }\n//     static getDriveredStateFromProps(props, state){\n\n//     }\n//     getSnapshotBeforeUpdate() {\n\n//     }\n//     // componentWillMount() {\n\n//     // }\n//     componentDidMount() {\n//         // GET the data I need to correctly display\n\n//     }\n//     // componentWillReceiveProps(nextProps) {\n//     //     if (nextProps.whatever !== this.props.whatever) {\n//     //         // do something important here\n\n//     //     }\n//     // }\n//     shouldComponentUpdate(nextProps, nextState){\n//         // return true if want it to update\n//         // return false if not\n\n//     }\n//     componentWillUnmount() {\n//         // remove event listener\n//         // teardown or cleanup your code before your component disappears\n\n//     }\n//     // componenWillUpdate() {\n\n//     // }\n\n//     render() {\n//         return (\n//             <div>Code goes here</div>\n//         )\n//     }\n// }\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             todos: todosData\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n\n//     handleChange(id){\n//         this.setState(prevState => {\n//             const updatedTodos = prevState.todos.map(todo => {\n//                 if (todo.id === id) {\n//                     todo.completed = !todo.completed\n//                 }\n//                 return todo\n//             })\n//             return {\n//                 todos: updatedTodos\n\n//             }\n\n//         })\n//     } \n//     render() {\n//         const TodoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\n//         handleChange={this.handleChange}/>)\n//         return(\n//             <div className=\"todo-list\">\n//                 {TodoItems}\n//             </div>\n//         )\n//     }\n// }\n\nexport default App;","map":{"version":3,"names":["React","App","Component","constructor","state","isLoggedIn","handleClick","bind","setState","prevState","render"],"sources":["/home/daniel/Desktop/learn-python/delu/delreact/src/App.js"],"sourcesContent":["import React from \"react\";\n// import Conditional from \"./Conditional\"\n// import TodoItem from \"./TodoItem\";\n// import todosData from \"./todosData\";\n// import Product from \"./Product\";\n// import productsData from \"./vschoolProducts\"\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state ={\n            isLoggedIn: false\n        }\n        this.handleClick = this.handleClick.bind(this)\n    }\n    handleClick() {\n        this.setState(prevState => {\n            return\n        })\n    }\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleClick}>LOG IN</button>\n            </div>\n        )\n    }   \n}\n\n// class App extends Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             unreadMessages: [\"a\", \"b\", \"c\", \"d\"]\n//         }\n//     }\n   \n//     render() {\n//         return(\n//             <div>\n//               {\n//                 this.state.unreadMessages.length > 0 &&\n//                 <h2>You have {this.state.unreadMessages.length} unread messages!</h2>\n//                }\n//             </div>\n//         )\n//     }\n// }\n// class TodoList extends Component {\n//     constructor() {\n//         super()\n//         this.state = {}\n//     }\n//     static getDriveredStateFromProps(props, state){\n\n//     }\n//     getSnapshotBeforeUpdate() {\n\n//     }\n//     // componentWillMount() {\n\n//     // }\n//     componentDidMount() {\n//         // GET the data I need to correctly display\n\n//     }\n//     // componentWillReceiveProps(nextProps) {\n//     //     if (nextProps.whatever !== this.props.whatever) {\n//     //         // do something important here\n\n//     //     }\n//     // }\n//     shouldComponentUpdate(nextProps, nextState){\n//         // return true if want it to update\n//         // return false if not\n\n//     }\n//     componentWillUnmount() {\n//         // remove event listener\n//         // teardown or cleanup your code before your component disappears\n\n//     }\n//     // componenWillUpdate() {\n\n//     // }\n  \n//     render() {\n//         return (\n//             <div>Code goes here</div>\n//         )\n//     }\n// }\n\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             todos: todosData\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n    \n//     handleChange(id){\n//         this.setState(prevState => {\n//             const updatedTodos = prevState.todos.map(todo => {\n//                 if (todo.id === id) {\n//                     todo.completed = !todo.completed\n//                 }\n//                 return todo\n//             })\n//             return {\n//                 todos: updatedTodos\n\n//             }\n\n//         })\n//     } \n//     render() {\n//         const TodoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\n//         handleChange={this.handleChange}/>)\n//         return(\n//             <div className=\"todo-list\">\n//                 {TodoItems}\n//             </div>\n//         )\n//     }\n// }\n\n\nexport default App"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,GAAG,SAASD,KAAK,CAACE,SAAS,CAAC;EAC9BC,WAAW,GAAG;IACV,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAE;MACRC,UAAU,EAAE;IAChB,CAAC;IACD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EACAD,WAAW,GAAG;IACV,IAAI,CAACE,QAAQ,CAACC,SAAS,IAAI;MACvB;IACJ,CAAC,CAAC;EACN;EACAC,MAAM,GAAG;IACL,oBACI;MAAA,uBACI;QAAQ,OAAO,EAAE,IAAI,CAACJ,WAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAChD;EAEd;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeL,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}