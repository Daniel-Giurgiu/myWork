{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/learn-python/delu/driveWork/frontend/src/components/Exercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Popup from \"./Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Exercise(_ref) {\n  _s();\n  let {\n    filename\n  } = _ref;\n  const [IsOpenp, setIsOpenp] = useState(isOpen);\n  const [isOpen, setIsOpen] = useState(false);\n  const [child, setChild] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n  const changeHandler = e => {\n    setName(e.target.value);\n  };\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n    setIsActive(current => !current);\n  };\n  const togglePopup = () => {\n    setIsOpenp(!IsOpenp);\n  };\n  const getChild = filename => {\n    axios.get('http://localhost:5000/' + filename).then(res => {\n      const elems = res.data;\n      console.log(elems);\n      setChild(elems);\n    });\n  };\n  const submit = e => {\n    const data = new FormData();\n    data.append('name', name);\n    e.preventDefault();\n    axios.post('http://127.0.0.1:5000/add', data, {}).then(() => {\n      getElem();\n    }).catch(error => console.error(error));\n  };\n  useEffect(() => {\n    getChild(filename);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        display: isActive ? 'none' : ''\n      },\n      type: \"submit\",\n      onClick: setIsOpenp,\n      children: \"\\u2795\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), IsOpenp && /*#__PURE__*/_jsxDEV(Popup, {\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Folder name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: name,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => submit(e),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true),\n      handleClose: togglePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this), child.map((el, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        display: isActive ? 'none' : '',\n        backgroundColor: 'green',\n        color: 'white',\n        padding: '75px 85px',\n        textAlign: 'center',\n        margin: '24px 47px',\n        fontSize: '37px'\n      },\n      type: \"button\",\n      onClick: handleClick,\n      children: child[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)), isOpen && /*#__PURE__*/_jsxDEV(Exercise, {\n      filename: filename + \"/\" + child[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Exercise, \"+zbkYBhIalZeNJMS0UZNmAx/9iQ=\");\n_c = Exercise;\nvar _c;\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"names":["React","useState","useEffect","axios","Popup","Exercise","filename","IsOpenp","setIsOpenp","isOpen","setIsOpen","child","setChild","isActive","setIsActive","changeHandler","e","setName","target","value","handleClick","current","togglePopup","getChild","get","then","res","elems","data","console","log","submit","FormData","append","name","preventDefault","post","getElem","catch","error","display","map","el","i","backgroundColor","color","padding","textAlign","margin","fontSize"],"sources":["/home/daniel/Desktop/learn-python/delu/driveWork/frontend/src/components/Exercise.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\"; \nimport axios from \"axios\";\nimport Popup from \"./Popup\";\n\nexport default function Exercise({filename}) {\n  const [IsOpenp, setIsOpenp] = useState(isOpen);\n  const [isOpen, setIsOpen] = useState(false);\n  const [child, setChild] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n\n  const changeHandler = (e) => {\n\t\tsetName(e.target.value)\n\t}\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n    setIsActive(current => !current);\n  }\n  const togglePopup = () => {\n    setIsOpenp(!IsOpenp);\n  }\n  const getChild = (filename) => {\n    axios.get('http://localhost:5000/' + filename)\n    .then(res => {\n        const elems = res.data\n        console.log(elems)\n        setChild(elems)\n    })\n  }\n  const submit = (e) => {\n\t\tconst data = new FormData() \n        data.append('name', name)\n\t\te.preventDefault()\n\n\t\taxios.post('http://127.0.0.1:5000/add', data,  {})\t\n\t\t.then(() => {\n\t\t\tgetElem()\n\t\t})\t\n\t\t.catch(error => console.error(error))\n\t}\n  useEffect(() => {\n    getChild(filename)\n}, []);\n  return (\n    <div>\n        <button\n            style={{\n                display: isActive ? 'none' : '',\n            }}\n             type=\"submit\" \n             onClick={setIsOpenp}>âž•</button>\n            <br/>\n            {IsOpenp && <Popup\n\t\t\t\t\tcontent={<>\n                        <div>\n                            <label>Folder name</label>\n                            <br/>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n                        <div>\n                            <button type=\"submit\" onClick={(e)=>submit(e)}>Submit</button>\n                        </div>\n\t\t\t\t\t</>}\n\t\t\t\t\thandleClose={togglePopup}\n\t\t\t\t\t/>}\n        {child.map((el, i) => \n        <button \n          style={{\n          display: isActive ? 'none' : '',\n          backgroundColor: 'green',\n          color: 'white',\n          padding: '75px 85px',\n          textAlign: 'center',\n          margin: '24px 47px',\n          fontSize: '37px',\n         }} \n          type=\"button\" \n          onClick={handleClick}>{child[i]}</button>)}\n        {isOpen && <Exercise filename={filename + \"/\" + child[0]}/>}\n    </div>\n)\n\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC;AAAA;AAE5B,eAAe,SAASC,QAAQ,OAAa;EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAACQ,MAAM,CAAC;EAC9C,MAAM,CAACA,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMc,aAAa,GAAIC,CAAC,IAAK;IAC7BC,OAAO,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EACxB,CAAC;EACA,MAAMC,WAAW,GAAG,MAAM;IACxBV,SAAS,CAAC,CAACD,MAAM,CAAC;IAClBK,WAAW,CAACO,OAAO,IAAI,CAACA,OAAO,CAAC;EAClC,CAAC;EACD,MAAMC,WAAW,GAAG,MAAM;IACxBd,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EACD,MAAMgB,QAAQ,GAAIjB,QAAQ,IAAK;IAC7BH,KAAK,CAACqB,GAAG,CAAC,wBAAwB,GAAGlB,QAAQ,CAAC,CAC7CmB,IAAI,CAACC,GAAG,IAAI;MACT,MAAMC,KAAK,GAAGD,GAAG,CAACE,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClBf,QAAQ,CAACe,KAAK,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC;EACD,MAAMI,MAAM,GAAIf,CAAC,IAAK;IACtB,MAAMY,IAAI,GAAG,IAAII,QAAQ,EAAE;IACrBJ,IAAI,CAACK,MAAM,CAAC,MAAM,EAAEC,IAAI,CAAC;IAC/BlB,CAAC,CAACmB,cAAc,EAAE;IAElBhC,KAAK,CAACiC,IAAI,CAAC,2BAA2B,EAAER,IAAI,EAAG,CAAC,CAAC,CAAC,CACjDH,IAAI,CAAC,MAAM;MACXY,OAAO,EAAE;IACV,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIV,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC,CAAC;EACtC,CAAC;EACArC,SAAS,CAAC,MAAM;IACdqB,QAAQ,CAACjB,QAAQ,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EACJ,oBACE;IAAA,wBACI;MACI,KAAK,EAAE;QACHkC,OAAO,EAAE3B,QAAQ,GAAG,MAAM,GAAG;MACjC,CAAE;MACD,IAAI,EAAC,QAAQ;MACb,OAAO,EAAEL,UAAW;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS,eAChC;MAAA;MAAA;MAAA;IAAA,QAAK,EACJD,OAAO,iBAAI,QAAC,KAAK;MACzB,OAAO,eAAE;QAAA,wBACU;UAAA,wBACI;YAAA,UAAO;UAAW;YAAA;YAAA;YAAA;UAAA,QAAQ,eAC1B;YAAA;YAAA;YAAA;UAAA,QAAK,eAC1B;YACC,IAAI,EAAC,MAAM;YACX,IAAI,EAAC,MAAM;YACX,KAAK,EAAE2B,IAAK;YACZ,QAAQ,EAAEnB;UAAc;YAAA;YAAA;YAAA;UAAA,QACvB;QAAA;UAAA;UAAA;UAAA;QAAA,QACG,eACY;UAAA,uBACI;YAAQ,IAAI,EAAC,QAAQ;YAAC,OAAO,EAAGC,CAAC,IAAGe,MAAM,CAACf,CAAC,CAAE;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QAC5D;MAAA,gBACrB;MACJ,WAAW,EAAEM;IAAY;MAAA;MAAA;MAAA;IAAA,QACvB,EACEX,KAAK,CAAC8B,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,kBACjB;MACE,KAAK,EAAE;QACPH,OAAO,EAAE3B,QAAQ,GAAG,MAAM,GAAG,EAAE;QAC/B+B,eAAe,EAAE,OAAO;QACxBC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE,WAAW;QACpBC,SAAS,EAAE,QAAQ;QACnBC,MAAM,EAAE,WAAW;QACnBC,QAAQ,EAAE;MACX,CAAE;MACD,IAAI,EAAC,QAAQ;MACb,OAAO,EAAE7B,WAAY;MAAA,UAAET,KAAK,CAACgC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAU,CAAC,EAC3ClC,MAAM,iBAAI,QAAC,QAAQ;MAAC,QAAQ,EAAEH,QAAQ,GAAG,GAAG,GAAGK,KAAK,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACzD;AAIV;AAAC,GAnFuBN,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}