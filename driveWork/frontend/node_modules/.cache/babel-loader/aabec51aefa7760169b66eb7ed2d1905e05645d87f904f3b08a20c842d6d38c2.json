{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/learn-python/delu/delreact/src/App.js\";\nimport React, { Component } from \"react\";\n\n// import TodoItem from \"./TodoItem\";\n// import todosData from \"./todosData\";\n// import Product from \"./Product\";\n// import productsData from \"./vschoolProducts\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TodoList extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  componentDidMount() {\n    // GET the data I need to correctly display\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.whatever !== this.props.whatever) {\n      // do something important here\n    }\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    // return true if want it to update\n    // return false if not\n  }\n  componentWillUnmount() {\n    // remove event listener\n    // teardown or cleanup your code before your compo\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Code goes here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             todos: todosData\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n\n//     handleChange(id){\n//         this.setState(prevState => {\n//             const updatedTodos = prevState.todos.map(todo => {\n//                 if (todo.id === id) {\n//                     todo.completed = !todo.completed\n//                 }\n//                 return todo\n//             })\n//             return {\n//                 todos: updatedTodos\n\n//             }\n\n//         })\n//     } \n//     render() {\n//         const TodoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\n//         handleChange={this.handleChange}/>)\n//         return(\n//             <div className=\"todo-list\">\n//                 {TodoItems}\n//             </div>\n//         )\n//     }\n// }\n\nexport default App;","map":{"version":3,"names":["React","Component","TodoList","constructor","state","componentDidMount","componentWillReceiveProps","nextProps","whatever","props","shouldComponentUpdate","nextState","componentWillUnmount","render","App"],"sources":["/home/daniel/Desktop/learn-python/delu/delreact/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\n\n// import TodoItem from \"./TodoItem\";\n// import todosData from \"./todosData\";\n// import Product from \"./Product\";\n// import productsData from \"./vschoolProducts\"\nclass TodoList extends Component {\n    constructor() {\n        super()\n        this.state = {}\n    }\n    componentDidMount() {\n        // GET the data I need to correctly display\n\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.whatever !== this.props.whatever) {\n            // do something important here\n\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState){\n        // return true if want it to update\n        // return false if not\n\n    }\n    componentWillUnmount() {\n        // remove event listener\n        // teardown or cleanup your code before your compo\n\n    }\n  \n    render() {\n        return (\n            <div>Code goes here</div>\n        )\n    }\n}\n\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             todos: todosData\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n    \n//     handleChange(id){\n//         this.setState(prevState => {\n//             const updatedTodos = prevState.todos.map(todo => {\n//                 if (todo.id === id) {\n//                     todo.completed = !todo.completed\n//                 }\n//                 return todo\n//             })\n//             return {\n//                 todos: updatedTodos\n\n//             }\n\n//         })\n//     } \n//     render() {\n//         const TodoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\n//         handleChange={this.handleChange}/>)\n//         return(\n//             <div className=\"todo-list\">\n//                 {TodoItems}\n//             </div>\n//         )\n//     }\n// }\n\n\nexport default App"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AACA;AACA;AACA;AAAA;AACA,MAAMC,QAAQ,SAASD,SAAS,CAAC;EAC7BE,WAAW,GAAG;IACV,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;EACnB;EACAC,iBAAiB,GAAG;IAChB;EAAA;EAGJC,yBAAyB,CAACC,SAAS,EAAE;IACjC,IAAIA,SAAS,CAACC,QAAQ,KAAK,IAAI,CAACC,KAAK,CAACD,QAAQ,EAAE;MAC5C;IAAA;EAGR;EACAE,qBAAqB,CAACH,SAAS,EAAEI,SAAS,EAAC;IACvC;IACA;EAAA;EAGJC,oBAAoB,GAAG;IACnB;IACA;EAAA;EAIJC,MAAM,GAAG;IACL,oBACI;MAAA,UAAK;IAAc;MAAA;MAAA;MAAA;IAAA,QAAM;EAEjC;AACJ;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}