{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/learn-python/delu/delreact/src/App.js\";\nimport React, { Component } from \"react\";\n// import Conditional from \"./Conditional\"\n// import TodoItem from \"./TodoItem\";\n// import todosData from \"./todosData\";\n// import Product from \"./Product\";\n// import productsData from \"./vschoolProducts\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n// class App extends Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             unreadMessages: [\"a\", \"b\", \"c\", \"d\"]\n//         }\n//     }\n\n//     render() {\n//         return(\n//             <div>\n//               {\n//                 this.state.unreadMessages.length > 0 &&\n//                 <h2>You have {this.state.unreadMessages.length} unread messages!</h2>\n//                }\n//             </div>\n//         )\n//     }\n// }\n// class TodoList extends Component {\n//     constructor() {\n//         super()\n//         this.state = {}\n//     }\n//     static getDriveredStateFromProps(props, state){\n\n//     }\n//     getSnapshotBeforeUpdate() {\n\n//     }\n//     // componentWillMount() {\n\n//     // }\n//     componentDidMount() {\n//         // GET the data I need to correctly display\n\n//     }\n//     // componentWillReceiveProps(nextProps) {\n//     //     if (nextProps.whatever !== this.props.whatever) {\n//     //         // do something important here\n\n//     //     }\n//     // }\n//     shouldComponentUpdate(nextProps, nextState){\n//         // return true if want it to update\n//         // return false if not\n\n//     }\n//     componentWillUnmount() {\n//         // remove event listener\n//         // teardown or cleanup your code before your component disappears\n\n//     }\n//     // componenWillUpdate() {\n\n//     // }\n\n//     render() {\n//         return (\n//             <div>Code goes here</div>\n//         )\n//     }\n// }\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             todos: todosData\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n\n//     handleChange(id){\n//         this.setState(prevState => {\n//             const updatedTodos = prevState.todos.map(todo => {\n//                 if (todo.id === id) {\n//                     todo.completed = !todo.completed\n//                 }\n//                 return todo\n//             })\n//             return {\n//                 todos: updatedTodos\n\n//             }\n\n//         })\n//     } \n//     render() {\n//         const TodoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\n//         handleChange={this.handleChange}/>)\n//         return(\n//             <div className=\"todo-list\">\n//                 {TodoItems}\n//             </div>\n//         )\n//     }\n// }\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","App"],"sources":["/home/daniel/Desktop/learn-python/delu/delreact/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\n// import Conditional from \"./Conditional\"\n// import TodoItem from \"./TodoItem\";\n// import todosData from \"./todosData\";\n// import Product from \"./Product\";\n// import productsData from \"./vschoolProducts\"\n\nfunction App() {\n    return (\n        <div></div>\n    )\n}\n\n// class App extends Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             unreadMessages: [\"a\", \"b\", \"c\", \"d\"]\n//         }\n//     }\n   \n//     render() {\n//         return(\n//             <div>\n//               {\n//                 this.state.unreadMessages.length > 0 &&\n//                 <h2>You have {this.state.unreadMessages.length} unread messages!</h2>\n//                }\n//             </div>\n//         )\n//     }\n// }\n// class TodoList extends Component {\n//     constructor() {\n//         super()\n//         this.state = {}\n//     }\n//     static getDriveredStateFromProps(props, state){\n\n//     }\n//     getSnapshotBeforeUpdate() {\n\n//     }\n//     // componentWillMount() {\n\n//     // }\n//     componentDidMount() {\n//         // GET the data I need to correctly display\n\n//     }\n//     // componentWillReceiveProps(nextProps) {\n//     //     if (nextProps.whatever !== this.props.whatever) {\n//     //         // do something important here\n\n//     //     }\n//     // }\n//     shouldComponentUpdate(nextProps, nextState){\n//         // return true if want it to update\n//         // return false if not\n\n//     }\n//     componentWillUnmount() {\n//         // remove event listener\n//         // teardown or cleanup your code before your component disappears\n\n//     }\n//     // componenWillUpdate() {\n\n//     // }\n  \n//     render() {\n//         return (\n//             <div>Code goes here</div>\n//         )\n//     }\n// }\n\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             todos: todosData\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n    \n//     handleChange(id){\n//         this.setState(prevState => {\n//             const updatedTodos = prevState.todos.map(todo => {\n//                 if (todo.id === id) {\n//                     todo.completed = !todo.completed\n//                 }\n//                 return todo\n//             })\n//             return {\n//                 todos: updatedTodos\n\n//             }\n\n//         })\n//     } \n//     render() {\n//         const TodoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\n//         handleChange={this.handleChange}/>)\n//         return(\n//             <div className=\"todo-list\">\n//                 {TodoItems}\n//             </div>\n//         )\n//     }\n// }\n\n\nexport default App"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,GAAG,GAAG;EACX,oBACI;IAAA;IAAA;IAAA;EAAA,QAAW;AAEnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,KAxGSA,GAAG;AA2GZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}