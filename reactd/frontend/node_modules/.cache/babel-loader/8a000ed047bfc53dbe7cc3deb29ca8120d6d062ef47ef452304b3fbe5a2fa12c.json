{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/learn-python/delu/delreact/src/App.js\";\nimport React, { Component } from \"react\";\n// import Conditional from \"./Conditional\"\n// import TodoItem from \"./TodoItem\";\n// import todosData from \"./todosData\";\n// import Product from \"./Product\";\n// import productsData from \"./vschoolProducts\"\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state ={\n//             isLoggedIn: false\n//         }\n//         this.handleClick = this.handleClick.bind(this)\n//     }\n//     handleClick() {\n//         this.setState(prevState => {\n//             return {\n//                 isLoggedIn: !prevState.isLoggedIn\n//             }\n//         })\n//     }\n//     render() {\n//         let buttonText =this.state.isLoggedIn ? \"LOG OUT\" : \"LOG IN\"\n//         let displayText = this.state.isLoggedIn ? \"Logged in\" : \"Logged out\" \n//         return (\n//             <div>\n//                 <button onClick={this.handleClick}>{buttonText}</button>\n//                 <h1>{displayText}</h1>\n//             </div>\n//         )\n//     }   \n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      character: {}\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    fetch(\"https://swapi.dev/api/films/1/\").then(response => response.json()).then(data => {\n      this.setState({\n        character: data\n      });\n    });\n  }\n  render() {\n    const text = this.state.loading ? \"loading...\" : this.state.character.name;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n}\n// class TodoList extends Component {\n//     constructor() {\n//         super()\n//         this.state = {}\n//     }\n//     static getDriveredStateFromProps(props, state){\n\n//     }\n//     getSnapshotBeforeUpdate() {\n\n//     }\n//     // componentWillMount() {\n\n//     // }\n//     componentDidMount() {\n//         // GET the data I need to correctly display\n\n//     }\n//     // componentWillReceiveProps(nextProps) {\n//     //     if (nextProps.whatever !== this.props.whatever) {\n//     //         // do something important here\n\n//     //     }\n//     // }\n//     shouldComponentUpdate(nextProps, nextState){\n//         // return true if want it to update\n//         // return false if not\n\n//     }\n//     componentWillUnmount() {\n//         // remove event listener\n//         // teardown or cleanup your code before your component disappears\n\n//     }\n//     // componenWillUpdate() {\n\n//     // }\n\n//     render() {\n//         return (\n//             <div>Code goes here</div>\n//         )\n//     }\n// }\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             todos: todosData\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n\n//     handleChange(id){\n//         this.setState(prevState => {\n//             const updatedTodos = prevState.todos.map(todo => {\n//                 if (todo.id === id) {\n//                     todo.completed = !todo.completed\n//                 }\n//                 return todo\n//             })\n//             return {\n//                 todos: updatedTodos\n\n//             }\n\n//         })\n//     } \n//     render() {\n//         const TodoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\n//         handleChange={this.handleChange}/>)\n//         return(\n//             <div className=\"todo-list\">\n//                 {TodoItems}\n//             </div>\n//         )\n//     }\n// }\n\nexport default App;","map":{"version":3,"names":["React","Component","App","constructor","state","loading","character","componentDidMount","setState","fetch","then","response","json","data","render","text","name"],"sources":["/home/daniel/Desktop/learn-python/delu/delreact/src/App.js"],"sourcesContent":["import React, {Component} from \"react\";\n// import Conditional from \"./Conditional\"\n// import TodoItem from \"./TodoItem\";\n// import todosData from \"./todosData\";\n// import Product from \"./Product\";\n// import productsData from \"./vschoolProducts\"\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state ={\n//             isLoggedIn: false\n//         }\n//         this.handleClick = this.handleClick.bind(this)\n//     }\n//     handleClick() {\n//         this.setState(prevState => {\n//             return {\n//                 isLoggedIn: !prevState.isLoggedIn\n//             }\n//         })\n//     }\n//     render() {\n//         let buttonText =this.state.isLoggedIn ? \"LOG OUT\" : \"LOG IN\"\n//         let displayText = this.state.isLoggedIn ? \"Logged in\" : \"Logged out\" \n//         return (\n//             <div>\n//                 <button onClick={this.handleClick}>{buttonText}</button>\n//                 <h1>{displayText}</h1>\n//             </div>\n//         )\n//     }   \n// }\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            loading: false,\n            character: {}\n        }\n    }\n    componentDidMount() {\n        this.setState({loading: true})\n        fetch(\"https://swapi.dev/api/films/1/\")\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    \n                    character: data\n                })\n            } )\n    }\n   \n    render() {\n        const text = this.state.loading ? \"loading...\" : this.state.character.name\n        return(\n            <div>\n              <p>{text}</p>\n            </div>\n        )\n    }\n}\n// class TodoList extends Component {\n//     constructor() {\n//         super()\n//         this.state = {}\n//     }\n//     static getDriveredStateFromProps(props, state){\n\n//     }\n//     getSnapshotBeforeUpdate() {\n\n//     }\n//     // componentWillMount() {\n\n//     // }\n//     componentDidMount() {\n//         // GET the data I need to correctly display\n\n//     }\n//     // componentWillReceiveProps(nextProps) {\n//     //     if (nextProps.whatever !== this.props.whatever) {\n//     //         // do something important here\n\n//     //     }\n//     // }\n//     shouldComponentUpdate(nextProps, nextState){\n//         // return true if want it to update\n//         // return false if not\n\n//     }\n//     componentWillUnmount() {\n//         // remove event listener\n//         // teardown or cleanup your code before your component disappears\n\n//     }\n//     // componenWillUpdate() {\n\n//     // }\n  \n//     render() {\n//         return (\n//             <div>Code goes here</div>\n//         )\n//     }\n// }\n\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             todos: todosData\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//     }\n    \n//     handleChange(id){\n//         this.setState(prevState => {\n//             const updatedTodos = prevState.todos.map(todo => {\n//                 if (todo.id === id) {\n//                     todo.completed = !todo.completed\n//                 }\n//                 return todo\n//             })\n//             return {\n//                 todos: updatedTodos\n\n//             }\n\n//         })\n//     } \n//     render() {\n//         const TodoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\n//         handleChange={this.handleChange}/>)\n//         return(\n//             <div className=\"todo-list\">\n//                 {TodoItems}\n//             </div>\n//         )\n//     }\n// }\n\n\nexport default App"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,GAAG,SAASD,SAAS,CAAC;EACxBE,WAAW,GAAG;IACV,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACTC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,CAAC;IAChB,CAAC;EACL;EACAC,iBAAiB,GAAG;IAChB,IAAI,CAACC,QAAQ,CAAC;MAACH,OAAO,EAAE;IAAI,CAAC,CAAC;IAC9BI,KAAK,CAAC,gCAAgC,CAAC,CAClCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,IAAI,CAACL,QAAQ,CAAC;QAEVF,SAAS,EAAEO;MACf,CAAC,CAAC;IACN,CAAC,CAAE;EACX;EAEAC,MAAM,GAAG;IACL,MAAMC,IAAI,GAAG,IAAI,CAACX,KAAK,CAACC,OAAO,GAAG,YAAY,GAAG,IAAI,CAACD,KAAK,CAACE,SAAS,CAACU,IAAI;IAC1E,oBACI;MAAA,uBACE;QAAA,UAAID;MAAI;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACT;EAEd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeb,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}